<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redworld.mapper.JobMapper">
  <resultMap id="BaseResultMap" type="com.redworld.model.Job">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="auth_id" jdbcType="BIGINT" property="authId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="job_type_id" jdbcType="INTEGER" property="jobTypeId" />
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="expect_count" jdbcType="INTEGER" property="expectCount" />
    <result column="price" jdbcType="FLOAT" property="price" />
    <result column="gender_id" jdbcType="INTEGER" property="genderId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="status_id" jdbcType="INTEGER" property="statusId" />
  </resultMap>
  
  <resultMap id="jobMerchant" type="com.redworld.model.JobWithMerchant">  
        <id column="id" jdbcType="BIGINT" property="id" />
	    <result column="auth_id" jdbcType="BIGINT" property="authId" />
	    <result column="title" jdbcType="VARCHAR" property="title" />
	    <result column="content" jdbcType="VARCHAR" property="content" />
	    <result column="job_type_id" jdbcType="INTEGER" property="jobTypeId" />
	    <result column="job_type_name" jdbcType="VARCHAR" property="jobTypeName" />
	    <result column="city_id" jdbcType="INTEGER" property="cityId" />
	    <result column="job_city_name" property="jobCityName" />
	    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
	    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
	    <result column="address" jdbcType="VARCHAR" property="address" />
	    <result column="expect_count" jdbcType="INTEGER" property="expectCount" />
	    <result column="price" jdbcType="FLOAT" property="price" />
	    <result column="gender_id" jdbcType="INTEGER" property="genderId" />
	    <result column="phone" jdbcType="VARCHAR" property="phone" />
	    <result column="status_id" jdbcType="INTEGER" property="statusId" />
          
        <!--  -->  
        <result column="merchant_name" property="merchantName" />
        <result column="avatar_image_name" property="avatarImageName" />
        <result column="city_name" property="cityName" />
        <result column="province_name" property="provinceName" />
    </resultMap>  
    
    <resultMap id="jobOfOs" type="com.redworld.model.response.JobResponse">  
        <id column="id" jdbcType="BIGINT" property="id" />
	    <result column="auth_id" jdbcType="BIGINT" property="authId" />
	    <result column="title" jdbcType="VARCHAR" property="title" />
	    <result column="content" jdbcType="VARCHAR" property="content" />
	    <result column="job_type_id" jdbcType="INTEGER" property="jobTypeId" />
	    <result column="job_type_name" jdbcType="VARCHAR" property="jobTypeName" />
	    <result column="city_id" jdbcType="INTEGER" property="cityId" />
	    <result column="city_name" property="cityName" />
	    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
	    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
	    <result column="address" jdbcType="VARCHAR" property="address" />
	    <result column="expect_count" jdbcType="INTEGER" property="expectCount" />
	    <result column="price" jdbcType="FLOAT" property="price" />
	    <result column="gender_id" jdbcType="INTEGER" property="genderId" />
	    <result column="phone" jdbcType="VARCHAR" property="phone" />
	    <result column="status_id" jdbcType="INTEGER" property="statusId" />
	    <result column="district_id" jdbcType="INTEGER" property="districtId" />
	    <result column="district_name" jdbcType="VARCHAR" property="districtName" />
    </resultMap>
    
    <resultMap id="jobMerchantResponse" type="com.redworld.model.response.MerchantResponse">  
        <result column="name" property="name" />
        <result column="avatar_image_name" property="avatarImageName" />
        <result column="city_name" property="cityName" />
        <result column="province_name" property="provinceName" />
        <result column="phone" property="phone" />
    </resultMap>  
      
    <!-- 根据id查询Order, 关联将Person查询出来  
    <select id="selectOrderById" parameterType="string" resultMap="orderBean">  
        select p.*, o.* from person p, orders o where p.personId  = o.pid and o.orderId = #{id}  
    </select>
  	--> 
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, auth_id, title, content, job_type_id, city_id, start_time, end_time, address, 
    expect_count, price, gender_id, phone, status_id
  </sql>
  
  <select id="selectByExample" parameterType="com.redworld.model.JobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    
    <if test="startRow != 0 and pageSize != 0">
		limit #{startRow},#{pageSize}
	</if>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectJobListOfOs" parameterType="java.util.Map" resultMap="jobOfOs">
    select 
	    j.id, j.auth_id, j.title, j.content, j.job_type_id, j.city_id, j.start_time, j.end_time, j.address, 
	    j.expect_count, j.price, j.gender_id, j.phone, j.status_id,
	    c.name as city_name, jt.name as job_type_name, j.district_id, d.name as district_name
	    from job j
	    left join city c on  c.id = j.city_id
	    left join district d on  d.id = j.district_id
	    left join job_type jt on jt.id = j.job_type_id
	    where 1 = 1
	    <if test="city_id != null and city_id != 0">
			and j.city_id = #{city_id}
        </if>
        <if test="auth_id != null and auth_id != 0">
			and j.auth_id = #{auth_id}
        </if>  
        <if test="job_type_id != null and job_type_id != ''">
			and j.job_type_id = #{job_type_id}
        </if>
        
        <if test="gender_id != null and gender_id != 0">
			and j.gender_id > #{gender_id}
        </if> 
        
        <if test="start_date != null">
			and j.create_at > #{startDate}
        </if>
        
        <if test="price_left != null">
			and j.price between #{price_left} and #{price_right}
        </if>
        
        <if test="status_id != null and status_id != 0">
			and j.status_id = #{status_id}
        </if>
        
        <if test="orderByClause != null">
	      order by ${orderByClause}
	    </if>
    
	    <if test="startRow != null and startRow != 0 and pageSize != 0">
			limit #{startRow},#{pageSize}
		</if>
       
  </select>
  
  <select id="selectWithMerchant" parameterType="java.lang.Long" resultMap="jobMerchant">
    select 
	    j.id, j.auth_id, j.title, j.content, j.job_type_id, jt.name as job_type_name, 
	    j.city_id, c1.name as job_city_name,j.start_time, j.end_time, j.address, 
	    j.expect_count, j.price, j.gender_id, j.phone, j.status_id,
	    a.name as merchant_name, a.avatar_image_name, c.name as city_name, p.name as province_name
	    from job j
	    left join account a on a.auth_id = j.auth_id
	    left join city c on a.city_id = c.id
	    left join city c1 on j.city_id = c1.id
	    left join province p on a.province_id = p.id
	    left join job_type jt on jt.id = j.job_type_id
	    where j.id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectWithMerchantResponse" parameterType="java.lang.Long" resultMap="jobMerchantResponse">
    select 
	    a.name, a.avatar_image_name, c.name as city_name, p.name as province_name, 
	    j.phone
	    from job j
	    left join account a on a.auth_id = j.auth_id
	    left join city c on a.city_id = c.id
	    left join province p on a.province_id = p.id
	    where j.id = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from job
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.redworld.model.JobExample">
    delete from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.redworld.model.Job">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into job (auth_id, title, content, 
      job_type_id, city_id, district_id, start_time, 
      end_time, address, expect_count, 
      price, gender_id, phone, 
      status_id)
    values (#{authId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{jobTypeId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, #{districtId,jdbcType=INTEGER},#{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, #{expectCount,jdbcType=INTEGER}, 
      #{price,jdbcType=REAL}, #{genderId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{statusId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.redworld.model.Job">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authId != null">
        auth_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="jobTypeId != null">
        job_type_id,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="expectCount != null">
        expect_count,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="genderId != null">
        gender_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="statusId != null">
        status_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authId != null">
        #{authId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="jobTypeId != null">
        #{jobTypeId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="expectCount != null">
        #{expectCount,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="genderId != null">
        #{genderId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null">
        #{statusId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.redworld.model.JobExample" resultType="java.lang.Long">
    select count(*) from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update job
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.authId != null">
        auth_id = #{record.authId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.jobTypeId != null">
        job_type_id = #{record.jobTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.expectCount != null">
        expect_count = #{record.expectCount,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.genderId != null">
        gender_id = #{record.genderId,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.statusId != null">
        status_id = #{record.statusId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update job
    set id = #{record.id,jdbcType=BIGINT},
      auth_id = #{record.authId,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      job_type_id = #{record.jobTypeId,jdbcType=INTEGER},
      city_id = #{record.cityId,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      address = #{record.address,jdbcType=VARCHAR},
      expect_count = #{record.expectCount,jdbcType=INTEGER},
      price = #{record.price,jdbcType=REAL},
      gender_id = #{record.genderId,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      status_id = #{record.statusId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.redworld.model.Job">
    update job
    <set>
      <if test="authId != null">
        auth_id = #{authId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="jobTypeId != null">
        job_type_id = #{jobTypeId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="expectCount != null">
        expect_count = #{expectCount,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="genderId != null">
        gender_id = #{genderId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null">
        status_id = #{statusId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.redworld.model.Job">
    update job
    set auth_id = #{authId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      job_type_id = #{jobTypeId,jdbcType=INTEGER},
      city_id = #{cityId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      expect_count = #{expectCount,jdbcType=INTEGER},
      price = #{price,jdbcType=REAL},
      gender_id = #{genderId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      status_id = #{statusId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>