<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redworld.mapper.BrokerMapper">
  
  <resultMap id="BaseResultMap" type="com.redworld.model.Broker">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="auth_id" jdbcType="BIGINT" property="authId" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="company_qualification" jdbcType="VARCHAR" property="companyQualification" />
  </resultMap>
  
  <resultMap id="AccountMap" type="com.redworld.model.BrokerOnlineStarResponse">
    <id column="os_id" jdbcType="BIGINT" property="osId" />
    <result column="name" property="name" />
    <result column="city_name" jdbcType="VARCHAR" property="cityName" />
    <result column="province_name" jdbcType="VARCHAR" property="provinceName" />
    <result column="gender_id" property="genderId" />
    <result column="avatar_image_name" jdbcType="VARCHAR" property="avatarImageName" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, auth_id, company_name, company_qualification
  </sql>
  
  <select id="selectAccount" parameterType="java.lang.Long" resultMap="AccountMap">
    select os.id as os_id, a.`name`, c.name as city_name, p.name as province_name, a.`gender_id`, a.avatar_image_name from account a 
    	left join city c on c.id = a.city_id 
    	left join province p on p.id = a.province_id
		inner join online_star os ON os.account_id = a.id
    	where a.id in(
    	SELECT account_id FROM online_star WHERE id IN (SELECT os_id FROM `broker_online_star` WHERE broker_id = #{brokerId})
    )
  </select>
  
  <select id="selectOsIdList" parameterType="java.lang.Long" resultType="java.lang.Long">
    select os_id from broker_online_star where broker_id = #{brokerId}
  </select>
  
  <select id="selectByExample" parameterType="com.redworld.model.BrokerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from broker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from broker
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from broker
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.redworld.model.BrokerExample">
    delete from broker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="addOnlineStar">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into broker_online_star (broker_id, os_id)
    values (#{brokerId,jdbcType=BIGINT}, #{osId,jdbcType=BIGINT})
  </insert>
  
  <insert id="insert" parameterType="com.redworld.model.Broker">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into broker (auth_id, company_name, company_qualification
      )
    values (#{authId,jdbcType=BIGINT}, #{companyName,jdbcType=VARCHAR}, #{companyQualification,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.redworld.model.Broker">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into broker
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authId != null">
        auth_id,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="companyQualification != null">
        company_qualification,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authId != null">
        #{authId,jdbcType=BIGINT},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyQualification != null">
        #{companyQualification,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.redworld.model.BrokerExample" resultType="java.lang.Long">
    select count(*) from broker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update broker
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.authId != null">
        auth_id = #{record.authId,jdbcType=BIGINT},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyQualification != null">
        company_qualification = #{record.companyQualification,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update broker
    set id = #{record.id,jdbcType=BIGINT},
      auth_id = #{record.authId,jdbcType=BIGINT},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      company_qualification = #{record.companyQualification,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.redworld.model.Broker">
    update broker
    <set>
      <if test="authId != null">
        auth_id = #{authId,jdbcType=BIGINT},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyQualification != null">
        company_qualification = #{companyQualification,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.redworld.model.Broker">
    update broker
    set auth_id = #{authId,jdbcType=BIGINT},
      company_name = #{companyName,jdbcType=VARCHAR},
      company_qualification = #{companyQualification,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>